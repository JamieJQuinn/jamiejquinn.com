<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fluid-Dynamics on Jamie J Quinn</title><link>https://jamiejquinn.com/tags/fluid-dynamics/</link><description>Recent content in Fluid-Dynamics on Jamie J Quinn</description><generator>Hugo</generator><language>en-GB</language><copyright>Copyright Â© 2024, Jamie J Quinn.</copyright><lastBuildDate>Sun, 29 Jul 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://jamiejquinn.com/tags/fluid-dynamics/index.xml" rel="self" type="application/rss+xml"/><item><title>Running Fluid Simulations in WebGL I - Simple Convection</title><link>https://jamiejquinn.com/running-fluid-simulations-in-webgl-i-simple-convection/</link><pubDate>Sun, 29 Jul 2018 00:00:00 +0000</pubDate><guid>https://jamiejquinn.com/running-fluid-simulations-in-webgl-i-simple-convection/</guid><description>Years ago I worked my way through Lorena Barba&amp;rsquo;s 12 steps to Navier-Stokes in Python, but recently I&amp;rsquo;ve been getting more and more into GPU programming and figured that it would be an interesting exercise to redo the steps in WebGL. Really when I say GPU programming I mean using general purpose tech like CUDA, but CUDA and WebGL are similar enough (the boilerplate is of course totally different but the idea of writing a kernel to act on many pixels/fluid cells is the same).</description></item></channel></rss>